# Generated by Django 5.2.5 on 2025-08-31 05:56

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_facility'),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('equipment_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="Equipment name (e.g., '3D Printer', 'CNC Machine')", max_length=200)),
                ('capabilities', models.TextField(blank=True, help_text="Functions it can perform (e.g., 'PLA/ABS printing, 0.1mm precision')")),
                ('description', models.TextField(blank=True, help_text='Overview of equipment purpose and specifications')),
                ('inventory_code', models.CharField(help_text="Tracking code (e.g., 'EQ-CNC-001', 'PRINTER-3D-A2')", max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='Inventory code must contain only uppercase letters, numbers, hyphens, and underscores', regex='^[A-Z0-9\\-_]+$')])),
                ('usage_domain', models.CharField(choices=[('ELECTRONICS', 'Electronics'), ('MECHANICAL', 'Mechanical'), ('IOT', 'IoT'), ('SOFTWARE', 'Software'), ('TESTING', 'Testing'), ('FABRICATION', 'Fabrication')], help_text='Primary domain this equipment serves', max_length=20)),
                ('support_phase', models.CharField(choices=[('TRAINING', 'Training'), ('PROTOTYPING', 'Prototyping'), ('TESTING', 'Testing'), ('COMMERCIALIZATION', 'Commercialization')], help_text='Which project phase this equipment primarily supports', max_length=20)),
                ('is_operational', models.BooleanField(default=True, help_text='Whether equipment is currently operational')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facility', models.ForeignKey(help_text='Facility that owns this equipment', on_delete=django.db.models.deletion.CASCADE, related_name='equipment_set', to='core.facility')),
            ],
            options={
                'verbose_name_plural': 'Equipment',
                'ordering': ['facility__name', 'name'],
            },
        ),
    ]
